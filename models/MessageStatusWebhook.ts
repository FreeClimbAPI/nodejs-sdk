/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MessageStatus } from "./../models/MessageStatus";
import { Webhook } from "./../models/Webhook";
import { HttpFile } from "../http/http";

/**
 * An outbound SMS has changed status and the notificationUrl from the Sms command or Send an SMS request is being invoked. A PerCL response will be ignored.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  requestType?: string;
  accountId?: string;
  messageId?: string;
  callId?: string;
  from?: string;
  to?: string;
  text?: string;
  direction?: string;
  applicationId?: string;
  status?: MessageStatus;
  phoneNumberId?: string;
}
export class MessageStatusWebhook extends Webhook {
  /**
   * Value will be messageStatus - An outbound SMS has changed status and the Sms command\'s notificationUrl is being invoked.
   */
  "requestType"?: string;
  /**
   * Account ID associated with your account.
   */
  "accountId"?: string;
  /**
   * Unique ID for this message, generated by FreeClimb.
   */
  "messageId"?: string;
  /**
   * Unique ID for the Call in the context of which the Sms PerCL command was issued.
   */
  "callId"?: string;
  /**
   * aPhone number used to initiate the SMS message (in E.164 format).
   */
  "from"?: string;
  /**
   * Destination number of the SMS message (in E.164 format).
   */
  "to"?: string;
  /**
   * Body of the SMS message.
   */
  "text"?: string;
  /**
   * Value will be outbound to indicate an outgoing SMS from FreeClimb.
   */
  "direction"?: string;
  /**
   * ID of the application to which the destination number is assigned. May be null if the originating number is invalid in some way or is not registered to an application.
   */
  "applicationId"?: string;
  "status"?: MessageStatus;
  /**
   * ID of the destination phone number.
   */
  "phoneNumberId"?: string;

  static readonly discriminator: string | undefined = "requestType";

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "requestType",
      baseName: "requestType",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "accountId",
      baseName: "accountId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "messageId",
      baseName: "messageId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "callId",
      baseName: "callId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "from",
      baseName: "from",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "to",
      baseName: "to",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "text",
      baseName: "text",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "direction",
      baseName: "direction",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "applicationId",
      baseName: "applicationId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "status",
      baseName: "status",
      type: "MessageStatus",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "phoneNumberId",
      baseName: "phoneNumberId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return super
      .getAttributeTypeMap()
      .concat(MessageStatusWebhook.attributeTypeMap);
  }
  public constructor(args: ArgumentsType) {
    super({ requestType: "messageStatus" });
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : MessageStatusWebhook.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["requestType"] = assign<string>("requestType");
    this["accountId"] = assign<string>("accountId");
    this["messageId"] = assign<string>("messageId");
    this["callId"] = assign<string>("callId");
    this["from"] = assign<string>("from");
    this["to"] = assign<string>("to");
    this["text"] = assign<string>("text");
    this["direction"] = assign<string>("direction");
    this["applicationId"] = assign<string>("applicationId");
    this["status"] = assign<MessageStatus>("status");
    this["phoneNumberId"] = assign<string>("phoneNumberId");
  }
  public static deserialize(payload: string): MessageStatusWebhook {
    return new MessageStatusWebhook(JSON.parse(payload));
  }
}
