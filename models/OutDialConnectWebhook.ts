/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CallDirection } from "./../models/CallDirection";
import { CallStatus } from "./../models/CallStatus";
import { Webhook } from "./../models/Webhook";
import { HttpFile } from "../http/http";

/**
 * A Call generated by OutDial has connected and the callConnectUrl is being invoked. This request is made in the context of the Call leg that was generated using OutDial and not the parent (the OutDialStart webhook is invoked on the parent call to continue that call context). A PerCL response is expected if the call was successfully connected (as indicated by status of inProgress) and begins the execution context for this (child) call.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  requestType?: string;
  accountId?: string;
  callId?: string;
  from?: string;
  to?: string;
  callStatus?: CallStatus;
  direction?: CallDirection;
  conferenceId?: string;
  queueId?: string;
  parentCallId?: string;
}
export class OutDialConnectWebhook extends Webhook {
  /**
   * Context or reason why this request is being made. Will be outDialConnect - A Call generated by OutDial has connected and the callConnectUrl is being invoked.
   */
  "requestType"?: string;
  /**
   * Account ID associated with your account.
   */
  "accountId"?: string;
  /**
   * Unique identifier for this Call, generated by FreeClimb
   */
  "callId"?: string;
  /**
   * Phone number of the party that initiated the Call (in E.164 format).
   */
  "from"?: string;
  /**
   * Phone number or SIP URL of the party that is receiving the call (phone number in E.164 format).
   */
  "to"?: string;
  "callStatus"?: CallStatus;
  "direction"?: CallDirection;
  /**
   * This is only populated if request pertains to a conference. Otherwise, it is set to null.
   */
  "conferenceId"?: string;
  /**
   * This is only populated if the request pertains to a queue. Otherwise, it is set to null.
   */
  "queueId"?: string;
  /**
   * ID of the Call that created this leg (child call).
   */
  "parentCallId"?: string;

  static readonly discriminator: string | undefined = "requestType";

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "requestType",
      baseName: "requestType",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "accountId",
      baseName: "accountId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "callId",
      baseName: "callId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "from",
      baseName: "from",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "to",
      baseName: "to",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "callStatus",
      baseName: "callStatus",
      type: "CallStatus",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "direction",
      baseName: "direction",
      type: "CallDirection",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "conferenceId",
      baseName: "conferenceId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "queueId",
      baseName: "queueId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "parentCallId",
      baseName: "parentCallId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return super
      .getAttributeTypeMap()
      .concat(OutDialConnectWebhook.attributeTypeMap);
  }
  public constructor(args: ArgumentsType) {
    super({ requestType: "outDialConnect" });
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (args[attribute] ??
        OutDialConnectWebhook.attributeTypeMap.find(
          (attr) => attr.name === attribute,
        )?.defaultValue) as T;
    };
    if (args["requestType"]) {
      this["requestType"] = assign<string>("requestType");
    }
    if (args["accountId"]) {
      this["accountId"] = assign<string>("accountId");
    }
    if (args["callId"]) {
      this["callId"] = assign<string>("callId");
    }
    if (args["from"]) {
      this["from"] = assign<string>("from");
    }
    if (args["to"]) {
      this["to"] = assign<string>("to");
    }
    if (args["callStatus"]) {
      this["callStatus"] = assign<CallStatus>("callStatus");
    }
    if (args["direction"]) {
      this["direction"] = assign<CallDirection>("direction");
    }
    if (args["conferenceId"]) {
      this["conferenceId"] = assign<string>("conferenceId");
    }
    if (args["queueId"]) {
      this["queueId"] = assign<string>("queueId");
    }
    if (args["parentCallId"]) {
      this["parentCallId"] = assign<string>("parentCallId");
    }
  }
  public static deserialize(payload: string): OutDialConnectWebhook {
    return new OutDialConnectWebhook(JSON.parse(payload));
  }
}
