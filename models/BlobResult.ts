/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from "../http/http";

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  blobId?: string;
  accountId?: string;
  alias?: string;
  revision?: number;
  dateCreated?: Date;
  dateUpdated?: Date;
  expiresAt?: Date;
  blob?: any;
}
export class BlobResult {
  /**
   * Identifier which can be used to reference this blob in future interations.
   */
  "blobId"?: string;
  "accountId"?: string;
  /**
   * Custom identifier for this blob that is unique for the owning account. It will be set to the blobId by default if not provided in the creation request.
   */
  "alias"?: string;
  "revision"?: number;
  /**
   * An RFC3339 timestamp with millisecond resolution. It represents the time this blob was created.
   */
  "dateCreated"?: Date;
  /**
   * An RFC3339 timestamp with millisecond resolution. It represents the time this blob was last modified, which at creation will always equal dateCreated.
   */
  "dateUpdated"?: Date;
  /**
   * An RFC3339 timestamp with millisecond resolution. It represents the time at which this blob will expire and self delete.
   */
  "expiresAt"?: Date;
  /**
   * Blob content
   */
  "blob"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "blobId",
      baseName: "blobId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "accountId",
      baseName: "accountId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "alias",
      baseName: "alias",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "revision",
      baseName: "revision",
      type: "number",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "dateCreated",
      baseName: "dateCreated",
      type: "Date",
      format: "date-time",

      defaultValue: undefined,
    },
    {
      name: "dateUpdated",
      baseName: "dateUpdated",
      type: "Date",
      format: "date-time",

      defaultValue: undefined,
    },
    {
      name: "expiresAt",
      baseName: "expiresAt",
      type: "Date",
      format: "date-time",

      defaultValue: undefined,
    },
    {
      name: "blob",
      baseName: "blob",
      type: "any",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return BlobResult.attributeTypeMap;
  }
  public constructor(args: ArgumentsType) {
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : BlobResult.attributeTypeMap.find((attr) => attr.name === attribute)
              ?.defaultValue
      ) as T;
    };
    this["blobId"] = assign<string>("blobId");
    this["accountId"] = assign<string>("accountId");
    this["alias"] = assign<string>("alias");
    this["revision"] = assign<number>("revision");
    this["dateCreated"] = assign<Date>("dateCreated");
    this["dateUpdated"] = assign<Date>("dateUpdated");
    this["expiresAt"] = assign<Date>("expiresAt");
    this["blob"] = assign<any>("blob");
  }
}
