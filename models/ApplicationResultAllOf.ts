/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ApplicationResultAllOf {
    /**
    * ID of the account that owns this phone number.
    */
    'accountId'?: string;
    /**
    * ID of the Application that FreeClimb should contact if a Call or SMS arrives for this phone number or a Call from this number is placed. An incoming phone number is not useful until associated with an applicationId.
    */
    'applicationId'?: string;
    /**
    * Description for this phone number. Typically the conventionally-formatted version of the phone number.
    */
    'alias'?: string;
    /**
    * The URL FreeClimb will request when a phone number assigned to this Application receives a Call. Used for inbound calls only.
    */
    'voiceUrl'?: string;
    /**
    * The URL that FreeClimb will request if it times out waiting for a response from the voiceUrl. Used for inbound calls only.
    */
    'voiceFallbackUrl'?: string;
    /**
    * The URL to which FreeClimb will make a POST request informing the result of the outbound Call request. The status property of the request message specifies if the Call was connected or not.
    */
    'callConnectUrl'?: string;
    /**
    * A URL to which FreeClimb will make a POST request when the Call ends to notify this app.
    */
    'statusCallbackUrl'?: string;
    /**
    * The URL FreeClimb will request when a phone number assigned to this Application receives an incoming SMS message. Used for inbound SMS only.
    */
    'smsUrl'?: string;
    /**
    * The URL that FreeClimb will request if it times out waiting for a response from the smsUrl. Used for inbound SMS only.
    */
    'smsFallbackUrl'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "accountId",
            "baseName": "accountId",
            "type": "string",
            "format": ""
        },
        {
            "name": "applicationId",
            "baseName": "applicationId",
            "type": "string",
            "format": ""
        },
        {
            "name": "alias",
            "baseName": "alias",
            "type": "string",
            "format": ""
        },
        {
            "name": "voiceUrl",
            "baseName": "voiceUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "voiceFallbackUrl",
            "baseName": "voiceFallbackUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "callConnectUrl",
            "baseName": "callConnectUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "statusCallbackUrl",
            "baseName": "statusCallbackUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "smsUrl",
            "baseName": "smsUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "smsFallbackUrl",
            "baseName": "smsFallbackUrl",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApplicationResultAllOf.attributeTypeMap;
    }

    public constructor() {
    }
}

