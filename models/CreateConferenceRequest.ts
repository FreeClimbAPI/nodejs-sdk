/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PlayBeep } from "./../models/PlayBeep";
import { HttpFile } from "../http/http";

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  /**
    * CodegenProperty{openApiType='string', baseName='alias', complexType='null', getter='getAlias', setter='setAlias', description='A description for this Conference. Maximum 64 characters.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='alias', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.alias;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='A description for this Conference. Maximum 64 characters.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "A description for this Conference. Maximum 64 characters.",
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='alias', nameInPascalCase='Alias', nameInSnakeCase='ALIAS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  alias?: string;
  /**
    * CodegenProperty{openApiType='PlayBeep', baseName='playBeep', complexType='PlayBeep', getter='getPlayBeep', setter='setPlayBeep', description='null', dataType='PlayBeep', datatypeWithEnum='PlayBeep', dataFormat='null', name='playBeep', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.playBeep;', baseType='PlayBeep', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"always"', jsonSchema='{
  "$ref" : "#/components/schemas/PlayBeep"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues={enumVars=[{name=ALWAYS, isString=false, value='always'}, {name=NEVER, isString=false, value='never'}, {name=ENTRY_ONLY, isString=false, value='entryOnly'}, {name=EXIT_ONLY, isString=false, value='exitOnly'}], values=[always, never, entryOnly, exitOnly]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=always, varname=ALWAYS}, {enum=never, varname=NEVER}, {enum=entryOnly, varname=ENTRY_ONLY}, {enum=exitOnly, varname=EXIT_ONLY}], x-enum-varnames=[ALWAYS, NEVER, ENTRY_ONLY, EXIT_ONLY], x-enum-default-attr=ALWAYS}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='playBeep', nameInPascalCase='PlayBeep', nameInSnakeCase='PLAY_BEEP', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/PlayBeep, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  playBeep?: PlayBeep;
  /**
    * CodegenProperty{openApiType='boolean', baseName='record', complexType='null', getter='getRecord', setter='setRecord', description='Setting to `true` records the entire Conference.', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='record', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.record;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Setting to `true` records the entire Conference.', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Setting to `true` records the entire Conference.",
  "type" : "boolean"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='record', nameInPascalCase='Record', nameInSnakeCase='RECORD', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  record?: boolean;
  /**
    * CodegenProperty{openApiType='string', baseName='waitUrl', complexType='null', getter='getWaitUrl', setter='setWaitUrl', description='If specified, a URL for the audio file that provides custom hold music for the Conference when it is in the populated state. Otherwise, FreeClimb uses a system default audio file. This is always fetched using HTTP GET and is fetched just once &mdash; when the Conference is created.', dataType='string', datatypeWithEnum='string', dataFormat='uri', name='waitUrl', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.waitUrl;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='If specified, a URL for the audio file that provides custom hold music for the Conference when it is in the populated state. Otherwise, FreeClimb uses a system default audio file. This is always fetched using HTTP GET and is fetched just once &mdash; when the Conference is created.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "If specified, a URL for the audio file that provides custom hold music for the Conference when it is in the populated state. Otherwise, FreeClimb uses a system default audio file. This is always fetched using HTTP GET and is fetched just once &mdash; when the Conference is created.",
  "format" : "uri",
  "type" : "string",
  "x-is-uri" : true,
  "x-is-url" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=true, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-url=true, x-is-uri=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='waitUrl', nameInPascalCase='WaitUrl', nameInSnakeCase='WAIT_URL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=uri, dependentRequired=null, contains=null}
     */
  waitUrl?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='statusCallbackUrl', complexType='null', getter='getStatusCallbackUrl', setter='setStatusCallbackUrl', description='This URL is invoked when the status of the Conference changes. For more information, see **statusCallbackUrl** (below).', dataType='string', datatypeWithEnum='string', dataFormat='uri', name='statusCallbackUrl', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.statusCallbackUrl;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='This URL is invoked when the status of the Conference changes. For more information, see **statusCallbackUrl** (below).', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "This URL is invoked when the status of the Conference changes. For more information, see **statusCallbackUrl** (below).",
  "format" : "uri",
  "type" : "string",
  "x-is-required" : true,
  "x-is-uri" : true,
  "x-is-url" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=true, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-url=true, x-is-required=true, x-is-uri=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='statusCallbackUrl', nameInPascalCase='StatusCallbackUrl', nameInSnakeCase='STATUS_CALLBACK_URL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=uri, dependentRequired=null, contains=null}
     */
  statusCallbackUrl: string;
}
export class CreateConferenceRequest {
  /**
   * A description for this Conference. Maximum 64 characters.
   */
  "alias"?: string;
  "playBeep"?: PlayBeep;
  /**
   * Setting to `true` records the entire Conference.
   */
  "record"?: boolean;
  /**
   * If specified, a URL for the audio file that provides custom hold music for the Conference when it is in the populated state. Otherwise, FreeClimb uses a system default audio file. This is always fetched using HTTP GET and is fetched just once &mdash; when the Conference is created.
   */
  "waitUrl"?: string;
  /**
   * This URL is invoked when the status of the Conference changes. For more information, see **statusCallbackUrl** (below).
   */
  "statusCallbackUrl": string;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "alias",
      baseName: "alias",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "playBeep",
      baseName: "playBeep",
      type: "PlayBeep",
      format: "",

      defaultValue: PlayBeep.ALWAYS,
    },
    {
      name: "record",
      baseName: "record",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "waitUrl",
      baseName: "waitUrl",
      type: "string",
      format: "uri",

      defaultValue: undefined,
    },
    {
      name: "statusCallbackUrl",
      baseName: "statusCallbackUrl",
      type: "string",
      format: "uri",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return CreateConferenceRequest.attributeTypeMap;
  }
  public constructor(args: ArgumentsType) {
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : CreateConferenceRequest.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["alias"] = assign<string>("alias");
    this["playBeep"] = assign<PlayBeep>("playBeep");
    this["record"] = assign<boolean>("record");
    this["waitUrl"] = assign<string>("waitUrl");
    this["statusCallbackUrl"] = assign<string>("statusCallbackUrl");
  }
}
