/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Webhook } from "./../models/Webhook";
import { HttpFile } from "../http/http";

/**
 * An SMS has been received by the platform and is being delivered to the smsUrl of the customer application that is associated with the destination number. A PerCL response will be ignored.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  requestType?: string;
  accountId?: string;
  from?: string;
  to?: string;
  text?: string;
  direction?: string;
  applicationId?: string;
  status?: string;
  phoneNumberId?: string;
  uri?: string;
}
export class MessageDeliveryWebhook extends Webhook {
  /**
   * Value will be messageDelivery - An SMS message has been received by the platform and is being delivered to the customer application associated with the destination number.
   */
  "requestType"?: string;
  /**
   * Account ID associated with your account.
   */
  "accountId"?: string;
  /**
   * Phone number of the party that initiated the Call (in E.164 format).
   */
  "from"?: string;
  /**
   * Phone number provisioned to you and to which this Call is directed (in E.164 format).
   */
  "to"?: string;
  /**
   * Body of the SMS message.
   */
  "text"?: string;
  /**
   * Value will be inbound to indicate the receipt of a message into the FreeClimb platform.
   */
  "direction"?: string;
  /**
   * ID of the application to which the destination number is assigned.
   */
  "applicationId"?: string;
  /**
   * Value will be received to indicate that the platform has successfully received the incoming message.
   */
  "status"?: string;
  /**
   * ID of the destination phone number.
   */
  "phoneNumberId"?: string;
  /**
   * The URI for this resource, relative to the API base URL
   */
  "uri"?: string;

  static readonly discriminator: string | undefined = "requestType";

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "requestType",
      baseName: "requestType",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "accountId",
      baseName: "accountId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "from",
      baseName: "from",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "to",
      baseName: "to",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "text",
      baseName: "text",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "direction",
      baseName: "direction",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "applicationId",
      baseName: "applicationId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "status",
      baseName: "status",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "phoneNumberId",
      baseName: "phoneNumberId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "uri",
      baseName: "uri",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return super
      .getAttributeTypeMap()
      .concat(MessageDeliveryWebhook.attributeTypeMap);
  }
  public constructor(args: ArgumentsType) {
    super({ requestType: "messageDelivery" });
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : MessageDeliveryWebhook.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["requestType"] = assign<string>("requestType");
    this["accountId"] = assign<string>("accountId");
    this["from"] = assign<string>("from");
    this["to"] = assign<string>("to");
    this["text"] = assign<string>("text");
    this["direction"] = assign<string>("direction");
    this["applicationId"] = assign<string>("applicationId");
    this["status"] = assign<string>("status");
    this["phoneNumberId"] = assign<string>("phoneNumberId");
    this["uri"] = assign<string>("uri");
  }
  public static deserialize(payload: string): MessageDeliveryWebhook {
    return new MessageDeliveryWebhook(JSON.parse(payload));
  }
}
