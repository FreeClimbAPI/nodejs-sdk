/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CallDirection } from "./../models/CallDirection";
import { CallStatus } from "./../models/CallStatus";
import { Webhook } from "./../models/Webhook";
import { HttpFile } from "../http/http";

/**
 * The Redirect command is executing and its actionUrl is being invoked. A PerCL response is expected.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  requestType?: string;
  accountId?: string;
  callId?: string;
  from?: string;
  to?: string;
  callStatus?: CallStatus;
  direction?: CallDirection;
  conferenceId?: string;
  queueId?: string;
  parentCallId?: string;
}
export class RedirectWebhook extends Webhook {
  /**
   * Context or reason why this request is being made. Will be redirect - The Redirect command is executing and its actionUrl is being invoked.
   */
  "requestType"?: string;
  /**
   * Account ID associated with your account.
   */
  "accountId"?: string;
  /**
   * Unique identifier for this Call, generated by FreeClimb
   */
  "callId"?: string;
  /**
   * Phone number of the party that initiated the Call (in E.164 format).
   */
  "from"?: string;
  /**
   * Phone number provisioned to the customer and to which this Call is directed (in E.164 format).
   */
  "to"?: string;
  "callStatus"?: CallStatus;
  "direction"?: CallDirection;
  /**
   * This is only populated if request pertains to a conference. Otherwise, it is set to null.
   */
  "conferenceId"?: string;
  /**
   * This is only populated if the request pertains to a queue. Otherwise, it is set to null.
   */
  "queueId"?: string;
  /**
   * ID of Call that created this leg (child call).
   */
  "parentCallId"?: string;

  static readonly discriminator: string | undefined = "requestType";

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "requestType",
      baseName: "requestType",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "accountId",
      baseName: "accountId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "callId",
      baseName: "callId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "from",
      baseName: "from",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "to",
      baseName: "to",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "callStatus",
      baseName: "callStatus",
      type: "CallStatus",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "direction",
      baseName: "direction",
      type: "CallDirection",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "conferenceId",
      baseName: "conferenceId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "queueId",
      baseName: "queueId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "parentCallId",
      baseName: "parentCallId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return super.getAttributeTypeMap().concat(RedirectWebhook.attributeTypeMap);
  }
  public constructor(args: ArgumentsType) {
    super({ requestType: "redirect" });
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : RedirectWebhook.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["requestType"] = assign<string>("requestType");
    this["accountId"] = assign<string>("accountId");
    this["callId"] = assign<string>("callId");
    this["from"] = assign<string>("from");
    this["to"] = assign<string>("to");
    this["callStatus"] = assign<CallStatus>("callStatus");
    this["direction"] = assign<CallDirection>("direction");
    this["conferenceId"] = assign<string>("conferenceId");
    this["queueId"] = assign<string>("queueId");
    this["parentCallId"] = assign<string>("parentCallId");
  }
  public static deserialize(payload: string): RedirectWebhook {
    return new RedirectWebhook(JSON.parse(payload));
  }
}
