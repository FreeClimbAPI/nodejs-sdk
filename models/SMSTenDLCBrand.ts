/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SMSTenDLCBrandAltBusinessIdType } from "./../models/SMSTenDLCBrandAltBusinessIdType";
import { SMSTenDLCBrandEntityType } from "./../models/SMSTenDLCBrandEntityType";
import { SMSTenDLCBrandIdentityStatus } from "./../models/SMSTenDLCBrandIdentityStatus";
import { SMSTenDLCBrandRelationship } from "./../models/SMSTenDLCBrandRelationship";
import { SMSTenDLCBrandStockExchange } from "./../models/SMSTenDLCBrandStockExchange";
import { HttpFile } from "../http/http";

/**
 * A brand is a business identity behind the campaign.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  /**
    * CodegenProperty{openApiType='string', baseName='accountId', complexType='null', getter='getAccountId', setter='setAccountId', description='ID of the account that created this Queue.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='accountId', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.accountId;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='ID of the account that created this Queue.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "ID of the account that created this Queue.",
  "nullable" : true,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='accountId', nameInPascalCase='AccountId', nameInSnakeCase='ACCOUNT_ID', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  accountId?: string;
  /**
    * CodegenProperty{openApiType='SMSTenDLCBrandEntityType', baseName='entityType', complexType='SMSTenDLCBrandEntityType', getter='getEntityType', setter='setEntityType', description='null', dataType='SMSTenDLCBrandEntityType', datatypeWithEnum='SMSTenDLCBrandEntityType', dataFormat='null', name='entityType', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.entityType;', baseType='SMSTenDLCBrandEntityType', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"PRIVATE_PROFIT"', jsonSchema='{
  "$ref" : "#/components/schemas/SMSTenDLCBrandEntityType"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues={enumVars=[{name=PRIVATE_PROFIT, isString=false, value='PRIVATE_PROFIT'}, {name=PUBLIC_PROFIT, isString=false, value='PUBLIC_PROFIT'}, {name=NON_PROFIT, isString=false, value='NON_PROFIT'}, {name=GOVERNMENT, isString=false, value='GOVERNMENT'}, {name=SOLE_PROPRIETOR, isString=false, value='SOLE_PROPRIETOR'}], values=[PRIVATE_PROFIT, PUBLIC_PROFIT, NON_PROFIT, GOVERNMENT, SOLE_PROPRIETOR]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=PRIVATE_PROFIT, varname=PRIVATE_PROFIT}, {enum=PUBLIC_PROFIT, varname=PUBLIC_PROFIT}, {enum=NON_PROFIT, varname=NON_PROFIT}, {enum=GOVERNMENT, varname=GOVERNMENT}, {enum=SOLE_PROPRIETOR, varname=SOLE_PROPRIETOR}], x-enum-varnames=[PRIVATE_PROFIT, PUBLIC_PROFIT, NON_PROFIT, GOVERNMENT, SOLE_PROPRIETOR]}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='entityType', nameInPascalCase='EntityType', nameInSnakeCase='ENTITY_TYPE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/SMSTenDLCBrandEntityType, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  entityType: SMSTenDLCBrandEntityType;
  /**
    * CodegenProperty{openApiType='string', baseName='cspId', complexType='null', getter='getCspId', setter='setCspId', description='Unique identifier assigned to the csp by the registry.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='cspId', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.cspId;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Unique identifier assigned to the csp by the registry.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Unique identifier assigned to the csp by the registry.",
  "readOnly" : true,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=true, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='cspId', nameInPascalCase='CspId', nameInSnakeCase='CSP_ID', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  cspId?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='brandId', complexType='null', getter='getBrandId', setter='setBrandId', description='Unique identifier assigned to the brand by the registry.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='brandId', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.brandId;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Unique identifier assigned to the brand by the registry.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Unique identifier assigned to the brand by the registry.",
  "readOnly" : true,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=true, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='brandId', nameInPascalCase='BrandId', nameInSnakeCase='BRAND_ID', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  brandId?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='firstName', complexType='null', getter='getFirstName', setter='setFirstName', description='First or given name. ', dataType='string', datatypeWithEnum='string', dataFormat='null', name='firstName', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.firstName;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='First or given name. ', maxLength=100, minLength=null, pattern='null', example='"John"', jsonSchema='{
  "description" : "First or given name. ",
  "example" : "John",
  "maxLength" : 100,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='firstName', nameInPascalCase='FirstName', nameInSnakeCase='FIRST_NAME', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  firstName?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='lastName', complexType='null', getter='getLastName', setter='setLastName', description='Last or Surname.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='lastName', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.lastName;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Last or Surname.', maxLength=100, minLength=null, pattern='null', example='"Doe"', jsonSchema='{
  "description" : "Last or Surname.",
  "example" : "Doe",
  "maxLength" : 100,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='lastName', nameInPascalCase='LastName', nameInSnakeCase='LAST_NAME', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  lastName?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='displayName', complexType='null', getter='getDisplayName', setter='setDisplayName', description='Display or marketing name of the brand.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='displayName', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.displayName;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Display or marketing name of the brand.', maxLength=255, minLength=null, pattern='null', example='"ABC Mobile"', jsonSchema='{
  "description" : "Display or marketing name of the brand.",
  "example" : "ABC Mobile",
  "maxLength" : 255,
  "type" : "string",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='displayName', nameInPascalCase='DisplayName', nameInSnakeCase='DISPLAY_NAME', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  displayName: string;
  /**
    * CodegenProperty{openApiType='string', baseName='companyName', complexType='null', getter='getCompanyName', setter='setCompanyName', description='(Required for Non-profit/private/public) Legal company name.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='companyName', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.companyName;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='(Required for Non-profit/private/public) Legal company name.', maxLength=255, minLength=null, pattern='null', example='"ABC Inc."', jsonSchema='{
  "description" : "(Required for Non-profit/private/public) Legal company name.",
  "example" : "ABC Inc.",
  "maxLength" : 255,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='companyName', nameInPascalCase='CompanyName', nameInSnakeCase='COMPANY_NAME', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  companyName?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='ein', complexType='null', getter='getEin', setter='setEin', description='(Required for Non-profit) Government assigned corporate tax ID. EIN is 9-digits in U.S.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='ein', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.ein;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='(Required for Non-profit) Government assigned corporate tax ID. EIN is 9-digits in U.S.', maxLength=21, minLength=null, pattern='null', example='"111111111"', jsonSchema='{
  "description" : "(Required for Non-profit) Government assigned corporate tax ID. EIN is 9-digits in U.S.",
  "example" : "111111111",
  "maxLength" : 21,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='ein', nameInPascalCase='Ein', nameInSnakeCase='EIN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  ein?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='einIssuingCountry', complexType='null', getter='getEinIssuingCountry', setter='setEinIssuingCountry', description='ISO2 2 characters country code. Example: US - United States', dataType='string', datatypeWithEnum='string', dataFormat='null', name='einIssuingCountry', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.einIssuingCountry;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='ISO2 2 characters country code. Example: US - United States', maxLength=2, minLength=null, pattern='null', example='"US"', jsonSchema='{
  "description" : "ISO2 2 characters country code. Example: US - United States",
  "example" : "US",
  "maxLength" : 2,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='einIssuingCountry', nameInPascalCase='EinIssuingCountry', nameInSnakeCase='EIN_ISSUING_COUNTRY', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  einIssuingCountry?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='phone', complexType='null', getter='getPhone', setter='setPhone', description='Valid phone number in e.164 international format.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='phone', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.phone;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Valid phone number in e.164 international format.', maxLength=20, minLength=null, pattern='null', example='"+12024567890"', jsonSchema='{
  "description" : "Valid phone number in e.164 international format.",
  "example" : "+12024567890",
  "maxLength" : 20,
  "type" : "string",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='phone', nameInPascalCase='Phone', nameInSnakeCase='PHONE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  phone: string;
  /**
    * CodegenProperty{openApiType='string', baseName='street', complexType='null', getter='getStreet', setter='setStreet', description='Street number and name.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='street', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.street;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Street number and name.', maxLength=100, minLength=null, pattern='null', example='"123 6th Ave"', jsonSchema='{
  "description" : "Street number and name.",
  "example" : "123 6th Ave",
  "maxLength" : 100,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='street', nameInPascalCase='Street', nameInSnakeCase='STREET', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  street?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='city', complexType='null', getter='getCity', setter='setCity', description='City name', dataType='string', datatypeWithEnum='string', dataFormat='null', name='city', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.city;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='City name', maxLength=100, minLength=null, pattern='null', example='"New York"', jsonSchema='{
  "description" : "City name",
  "example" : "New York",
  "maxLength" : 100,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='city', nameInPascalCase='City', nameInSnakeCase='CITY', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  city?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='state', complexType='null', getter='getState', setter='setState', description='State. Must be 2 letters code for United States.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='state', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.state;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='State. Must be 2 letters code for United States.', maxLength=20, minLength=null, pattern='null', example='"NY"', jsonSchema='{
  "description" : "State. Must be 2 letters code for United States.",
  "example" : "NY",
  "maxLength" : 20,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='state', nameInPascalCase='State', nameInSnakeCase='STATE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  state?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='postalCode', complexType='null', getter='getPostalCode', setter='setPostalCode', description='Postal codes. Use 5 digit zipcode for United States', dataType='string', datatypeWithEnum='string', dataFormat='null', name='postalCode', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.postalCode;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Postal codes. Use 5 digit zipcode for United States', maxLength=10, minLength=null, pattern='null', example='"10001"', jsonSchema='{
  "description" : "Postal codes. Use 5 digit zipcode for United States",
  "example" : "10001",
  "maxLength" : 10,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='postalCode', nameInPascalCase='PostalCode', nameInSnakeCase='POSTAL_CODE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  postalCode?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='country', complexType='null', getter='getCountry', setter='setCountry', description='ISO2 2 characters country code. Example: US - United States', dataType='string', datatypeWithEnum='string', dataFormat='null', name='country', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.country;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='ISO2 2 characters country code. Example: US - United States', maxLength=2, minLength=null, pattern='null', example='"US"', jsonSchema='{
  "description" : "ISO2 2 characters country code. Example: US - United States",
  "example" : "US",
  "maxLength" : 2,
  "type" : "string",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='country', nameInPascalCase='Country', nameInSnakeCase='COUNTRY', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  country: string;
  /**
    * CodegenProperty{openApiType='string', baseName='email', complexType='null', getter='getEmail', setter='setEmail', description='Valid email address of brand support contact.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='email', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.email;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Valid email address of brand support contact.', maxLength=100, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Valid email address of brand support contact.",
  "maxLength" : 100,
  "type" : "string",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='email', nameInPascalCase='Email', nameInSnakeCase='EMAIL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  email: string;
  /**
    * CodegenProperty{openApiType='string', baseName='stockSymbol', complexType='null', getter='getStockSymbol', setter='setStockSymbol', description='(Required for public company) stock symbol.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='stockSymbol', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.stockSymbol;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='(Required for public company) stock symbol.', maxLength=10, minLength=null, pattern='null', example='"ABC"', jsonSchema='{
  "description" : "(Required for public company) stock symbol.",
  "example" : "ABC",
  "maxLength" : 10,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='stockSymbol', nameInPascalCase='StockSymbol', nameInSnakeCase='STOCK_SYMBOL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  stockSymbol?: string;
  /**
    * CodegenProperty{openApiType='SMSTenDLCBrandStockExchange', baseName='stockExchange', complexType='SMSTenDLCBrandStockExchange', getter='getStockExchange', setter='setStockExchange', description='null', dataType='SMSTenDLCBrandStockExchange', datatypeWithEnum='SMSTenDLCBrandStockExchange', dataFormat='null', name='stockExchange', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.stockExchange;', baseType='SMSTenDLCBrandStockExchange', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"NASDAQ"', jsonSchema='{
  "$ref" : "#/components/schemas/SMSTenDLCBrandStockExchange"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues={enumVars=[{name=NONE, isString=false, value='NONE'}, {name=NASDAQ, isString=false, value='NASDAQ'}, {name=NYSE, isString=false, value='NYSE'}, {name=AMEX, isString=false, value='AMEX'}, {name=AMX, isString=false, value='AMX'}, {name=ASX, isString=false, value='ASX'}, {name=B3, isString=false, value='B3'}, {name=BME, isString=false, value='BME'}, {name=BSE, isString=false, value='BSE'}, {name=FRA, isString=false, value='FRA'}, {name=ICEX, isString=false, value='ICEX'}, {name=JPX, isString=false, value='JPX'}, {name=JSE, isString=false, value='JSE'}, {name=KRX, isString=false, value='KRX'}, {name=LON, isString=false, value='LON'}, {name=NSE, isString=false, value='NSE'}, {name=OMX, isString=false, value='OMX'}, {name=SEHK, isString=false, value='SEHK'}, {name=SGX, isString=false, value='SGX'}, {name=SSE, isString=false, value='SSE'}, {name=STO, isString=false, value='STO'}, {name=SWX, isString=false, value='SWX'}, {name=SZSE, isString=false, value='SZSE'}, {name=TSX, isString=false, value='TSX'}, {name=TWSE, isString=false, value='TWSE'}, {name=VSE, isString=false, value='VSE'}, {name=OTHER, isString=false, value='OTHER'}], values=[NONE, NASDAQ, NYSE, AMEX, AMX, ASX, B3, BME, BSE, FRA, ICEX, JPX, JSE, KRX, LON, NSE, OMX, SEHK, SGX, SSE, STO, SWX, SZSE, TSX, TWSE, VSE, OTHER]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=NONE, varname=NONE}, {enum=NASDAQ, varname=NASDAQ}, {enum=NYSE, varname=NYSE}, {enum=AMEX, varname=AMEX}, {enum=AMX, varname=AMX}, {enum=ASX, varname=ASX}, {enum=B3, varname=B3}, {enum=BME, varname=BME}, {enum=BSE, varname=BSE}, {enum=FRA, varname=FRA}, {enum=ICEX, varname=ICEX}, {enum=JPX, varname=JPX}, {enum=JSE, varname=JSE}, {enum=KRX, varname=KRX}, {enum=LON, varname=LON}, {enum=NSE, varname=NSE}, {enum=OMX, varname=OMX}, {enum=SEHK, varname=SEHK}, {enum=SGX, varname=SGX}, {enum=SSE, varname=SSE}, {enum=STO, varname=STO}, {enum=SWX, varname=SWX}, {enum=SZSE, varname=SZSE}, {enum=TSX, varname=TSX}, {enum=TWSE, varname=TWSE}, {enum=VSE, varname=VSE}, {enum=OTHER, varname=OTHER}], x-enum-varnames=[NONE, NASDAQ, NYSE, AMEX, AMX, ASX, B3, BME, BSE, FRA, ICEX, JPX, JSE, KRX, LON, NSE, OMX, SEHK, SGX, SSE, STO, SWX, SZSE, TSX, TWSE, VSE, OTHER]}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='stockExchange', nameInPascalCase='StockExchange', nameInSnakeCase='STOCK_EXCHANGE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/SMSTenDLCBrandStockExchange, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  stockExchange?: SMSTenDLCBrandStockExchange;
  /**
    * CodegenProperty{openApiType='string', baseName='ipAddress', complexType='null', getter='getIpAddress', setter='setIpAddress', description='IP address of the browser requesting to create brand identity.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='ipAddress', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.ipAddress;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='IP address of the browser requesting to create brand identity.', maxLength=50, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "IP address of the browser requesting to create brand identity.",
  "maxLength" : 50,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='ipAddress', nameInPascalCase='IpAddress', nameInSnakeCase='IP_ADDRESS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  ipAddress?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='website', complexType='null', getter='getWebsite', setter='setWebsite', description='Brand website URL.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='website', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.website;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Brand website URL.', maxLength=100, minLength=null, pattern='null', example='"http://www.abcmobile.com"', jsonSchema='{
  "description" : "Brand website URL.",
  "example" : "http://www.abcmobile.com",
  "maxLength" : 100,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='website', nameInPascalCase='Website', nameInSnakeCase='WEBSITE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  website?: string;
  /**
    * CodegenProperty{openApiType='SMSTenDLCBrandRelationship', baseName='brandRelationship', complexType='SMSTenDLCBrandRelationship', getter='getBrandRelationship', setter='setBrandRelationship', description='null', dataType='SMSTenDLCBrandRelationship', datatypeWithEnum='SMSTenDLCBrandRelationship', dataFormat='null', name='brandRelationship', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.brandRelationship;', baseType='SMSTenDLCBrandRelationship', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"BASIC_ACCOUNT"', jsonSchema='{
  "$ref" : "#/components/schemas/SMSTenDLCBrandRelationship"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues={enumVars=[{name=BASIC_ACCOUNT, isString=false, value='BASIC_ACCOUNT'}, {name=SMALL_ACCOUNT, isString=false, value='SMALL_ACCOUNT'}, {name=MEDIUM_ACCOUNT, isString=false, value='MEDIUM_ACCOUNT'}, {name=LARGE_ACCOUNT, isString=false, value='LARGE_ACCOUNT'}, {name=KEY_ACCOUNT, isString=false, value='KEY_ACCOUNT'}], values=[BASIC_ACCOUNT, SMALL_ACCOUNT, MEDIUM_ACCOUNT, LARGE_ACCOUNT, KEY_ACCOUNT]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=BASIC_ACCOUNT, varname=BASIC_ACCOUNT}, {enum=SMALL_ACCOUNT, varname=SMALL_ACCOUNT}, {enum=MEDIUM_ACCOUNT, varname=MEDIUM_ACCOUNT}, {enum=LARGE_ACCOUNT, varname=LARGE_ACCOUNT}, {enum=KEY_ACCOUNT, varname=KEY_ACCOUNT}], x-enum-varnames=[BASIC_ACCOUNT, SMALL_ACCOUNT, MEDIUM_ACCOUNT, LARGE_ACCOUNT, KEY_ACCOUNT]}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='brandRelationship', nameInPascalCase='BrandRelationship', nameInSnakeCase='BRAND_RELATIONSHIP', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/SMSTenDLCBrandRelationship, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  brandRelationship: SMSTenDLCBrandRelationship;
  /**
    * CodegenProperty{openApiType='string', baseName='vertical', complexType='null', getter='getVertical', setter='setVertical', description='Vertical or industry segment of the brand.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='vertical', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.vertical;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Vertical or industry segment of the brand.', maxLength=50, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Vertical or industry segment of the brand.",
  "maxLength" : 50,
  "type" : "string",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='vertical', nameInPascalCase='Vertical', nameInSnakeCase='VERTICAL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  vertical: string;
  /**
    * CodegenProperty{openApiType='string', baseName='altBusinessId', complexType='null', getter='getAltBusinessId', setter='setAltBusinessId', description='Alternate business identifier such as DUNS, LEI, or GIIN', dataType='string', datatypeWithEnum='string', dataFormat='null', name='altBusinessId', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.altBusinessId;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Alternate business identifier such as DUNS, LEI, or GIIN', maxLength=50, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Alternate business identifier such as DUNS, LEI, or GIIN",
  "maxLength" : 50,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='altBusinessId', nameInPascalCase='AltBusinessId', nameInSnakeCase='ALT_BUSINESS_ID', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  altBusinessId?: string;
  /**
    * CodegenProperty{openApiType='SMSTenDLCBrandAltBusinessIdType', baseName='altBusinessIdType', complexType='SMSTenDLCBrandAltBusinessIdType', getter='getAltBusinessIdType', setter='setAltBusinessIdType', description='null', dataType='SMSTenDLCBrandAltBusinessIdType', datatypeWithEnum='SMSTenDLCBrandAltBusinessIdType', dataFormat='null', name='altBusinessIdType', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.altBusinessIdType;', baseType='SMSTenDLCBrandAltBusinessIdType', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"NONE"', jsonSchema='{
  "$ref" : "#/components/schemas/SMSTenDLCBrandAltBusinessIdType"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues={enumVars=[{name=NONE, isString=false, value='NONE'}, {name=DUNS, isString=false, value='DUNS'}, {name=GIIN, isString=false, value='GIIN'}, {name=LEI, isString=false, value='LEI'}], values=[NONE, DUNS, GIIN, LEI]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=NONE, varname=NONE}, {enum=DUNS, varname=DUNS}, {enum=GIIN, varname=GIIN}, {enum=LEI, varname=LEI}], x-enum-varnames=[NONE, DUNS, GIIN, LEI]}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='altBusinessIdType', nameInPascalCase='AltBusinessIdType', nameInSnakeCase='ALT_BUSINESS_ID_TYPE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/SMSTenDLCBrandAltBusinessIdType, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  altBusinessIdType?: SMSTenDLCBrandAltBusinessIdType;
  /**
    * CodegenProperty{openApiType='string', baseName='universalEin', complexType='null', getter='getUniversalEin', setter='setUniversalEin', description='Universal EIN of Brand, Read Only.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='universalEin', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.universalEin;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Universal EIN of Brand, Read Only.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Universal EIN of Brand, Read Only.",
  "readOnly" : true,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=true, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='universalEin', nameInPascalCase='UniversalEin', nameInSnakeCase='UNIVERSAL_EIN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  universalEin?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='referenceId', complexType='null', getter='getReferenceId', setter='setReferenceId', description='Caller supplied brand reference ID. If supplied, the value must be unique across all submitted brands. Can be used to prevent duplicate brand registrations.', dataType='string', datatypeWithEnum='string', dataFormat='null', name='referenceId', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.referenceId;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Caller supplied brand reference ID. If supplied, the value must be unique across all submitted brands. Can be used to prevent duplicate brand registrations.', maxLength=50, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Caller supplied brand reference ID. If supplied, the value must be unique across all submitted brands. Can be used to prevent duplicate brand registrations.",
  "maxLength" : 50,
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=true, isInherited=false, discriminatorValue='null', nameInCamelCase='referenceId', nameInPascalCase='ReferenceId', nameInSnakeCase='REFERENCE_ID', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  referenceId?: string;
  /**
    * CodegenProperty{openApiType='object', baseName='optionalAttributes', complexType='null', getter='getOptionalAttributes', setter='setOptionalAttributes', description='Optional brand attributes. Please refer to GET /enum/optionalAttributeNames for dictionary of optional attribute names.', dataType='{ [key: string]: any; }', datatypeWithEnum='{ [key: string]: any; }', dataFormat='null', name='optionalAttributes', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.optionalAttributes;', baseType='any', containerType='map', containerTypeMapped='any', title='null', unescapedDescription='Optional brand attributes. Please refer to GET /enum/optionalAttributeNames for dictionary of optional attribute names.', maxLength=null, minLength=null, pattern='null', example='{}', jsonSchema='{
  "additionalProperties" : true,
  "description" : "Optional brand attributes. Please refer to GET /enum/optionalAttributeNames for dictionary of optional attribute names.",
  "type" : "object",
  "x-is-hash" : true,
  "x-is-map" : true,
  "x-is-object" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=true, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=true, isArray=false, isMap=true, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=CodegenProperty{openApiType='any', baseName='inner', complexType='null', getter='getInner', setter='setInner', description='null', dataType='any', datatypeWithEnum='any', dataFormat='null', name='inner', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.inner;', baseType='any', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{ }', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=true, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='inner', nameInPascalCase='Inner', nameInSnakeCase='INNER', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=true, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}, additionalProperties=CodegenProperty{openApiType='any', baseName='additional_properties', complexType='null', getter='getAdditionalProperties', setter='setAdditionalProperties', description='null', dataType='any', datatypeWithEnum='any', dataFormat='null', name='additionalProperties', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.additional_properties;', baseType='any', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{ }', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=true, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='additionalProperties', nameInPascalCase='AdditionalProperties', nameInSnakeCase='ADDITIONAL_PROPERTIES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=true, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=true, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}, vars=[], requiredVars=[], mostInnerItems=CodegenProperty{openApiType='any', baseName='inner', complexType='null', getter='getInner', setter='setInner', description='null', dataType='any', datatypeWithEnum='any', dataFormat='null', name='inner', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.inner;', baseType='any', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{ }', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=true, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='inner', nameInPascalCase='Inner', nameInSnakeCase='INNER', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=true, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}, vendorExtensions={x-is-map=true, x-is-hash=true, x-is-object=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='optionalAttributes', nameInPascalCase='OptionalAttributes', nameInSnakeCase='OPTIONAL_ATTRIBUTES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=true, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  optionalAttributes?: { [key: string]: any };
  /**
    * CodegenProperty{openApiType='boolean', baseName='mock', complexType='null', getter='getMock', setter='setMock', description='Test brand.', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='mock', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.mock;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Test brand.', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Test brand.",
  "type" : "boolean",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='mock', nameInPascalCase='Mock', nameInSnakeCase='MOCK', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  mock: boolean;
  /**
    * CodegenProperty{openApiType='SMSTenDLCBrandIdentityStatus', baseName='identityStatus', complexType='SMSTenDLCBrandIdentityStatus', getter='getIdentityStatus', setter='setIdentityStatus', description='null', dataType='SMSTenDLCBrandIdentityStatus', datatypeWithEnum='SMSTenDLCBrandIdentityStatus', dataFormat='null', name='identityStatus', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.identityStatus;', baseType='SMSTenDLCBrandIdentityStatus', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"SELF_DECLARED"', jsonSchema='{
  "$ref" : "#/components/schemas/SMSTenDLCBrandIdentityStatus"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues={enumVars=[{name=SELF_DECLARED, isString=false, value='SELF_DECLARED'}, {name=UNVERIFIED, isString=false, value='UNVERIFIED'}, {name=VERIFIED, isString=false, value='VERIFIED'}, {name=VETTED_VERIFIED, isString=false, value='VETTED_VERIFIED'}], values=[SELF_DECLARED, UNVERIFIED, VERIFIED, VETTED_VERIFIED]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=SELF_DECLARED, varname=SELF_DECLARED}, {enum=UNVERIFIED, varname=UNVERIFIED}, {enum=VERIFIED, varname=VERIFIED}, {enum=VETTED_VERIFIED, varname=VETTED_VERIFIED}], x-enum-varnames=[SELF_DECLARED, UNVERIFIED, VERIFIED, VETTED_VERIFIED]}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='identityStatus', nameInPascalCase='IdentityStatus', nameInSnakeCase='IDENTITY_STATUS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/SMSTenDLCBrandIdentityStatus, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  identityStatus: SMSTenDLCBrandIdentityStatus;
  /**
    * CodegenProperty{openApiType='string', baseName='createDate', complexType='null', getter='getCreateDate', setter='setCreateDate', description='Unix timestamp when brand was created.', dataType='Date', datatypeWithEnum='Date', dataFormat='date-time', name='createDate', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.createDate;', baseType='Date', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Unix timestamp when brand was created.', maxLength=null, minLength=null, pattern='null', example='new Date('1970-01-01T00:00:00.00Z')', jsonSchema='{
  "description" : "Unix timestamp when brand was created.",
  "format" : "date-time",
  "type" : "string",
  "x-is-date-time" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=true, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-date-time=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='createDate', nameInPascalCase='CreateDate', nameInSnakeCase='CREATE_DATE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=date-time, dependentRequired=null, contains=null}
     */
  createDate?: Date;
}
export class SMSTenDLCBrand {
  /**
   * ID of the account that created this Queue.
   */
  "accountId"?: string;
  "entityType": SMSTenDLCBrandEntityType;
  /**
   * Unique identifier assigned to the csp by the registry.
   */
  "cspId"?: string;
  /**
   * Unique identifier assigned to the brand by the registry.
   */
  "brandId"?: string;
  /**
   * First or given name.
   */
  "firstName"?: string;
  /**
   * Last or Surname.
   */
  "lastName"?: string;
  /**
   * Display or marketing name of the brand.
   */
  "displayName": string;
  /**
   * (Required for Non-profit/private/public) Legal company name.
   */
  "companyName"?: string;
  /**
   * (Required for Non-profit) Government assigned corporate tax ID. EIN is 9-digits in U.S.
   */
  "ein"?: string;
  /**
   * ISO2 2 characters country code. Example: US - United States
   */
  "einIssuingCountry"?: string;
  /**
   * Valid phone number in e.164 international format.
   */
  "phone": string;
  /**
   * Street number and name.
   */
  "street"?: string;
  /**
   * City name
   */
  "city"?: string;
  /**
   * State. Must be 2 letters code for United States.
   */
  "state"?: string;
  /**
   * Postal codes. Use 5 digit zipcode for United States
   */
  "postalCode"?: string;
  /**
   * ISO2 2 characters country code. Example: US - United States
   */
  "country": string;
  /**
   * Valid email address of brand support contact.
   */
  "email": string;
  /**
   * (Required for public company) stock symbol.
   */
  "stockSymbol"?: string;
  "stockExchange"?: SMSTenDLCBrandStockExchange;
  /**
   * IP address of the browser requesting to create brand identity.
   */
  "ipAddress"?: string;
  /**
   * Brand website URL.
   */
  "website"?: string;
  "brandRelationship": SMSTenDLCBrandRelationship;
  /**
   * Vertical or industry segment of the brand.
   */
  "vertical": string;
  /**
   * Alternate business identifier such as DUNS, LEI, or GIIN
   */
  "altBusinessId"?: string;
  "altBusinessIdType"?: SMSTenDLCBrandAltBusinessIdType;
  /**
   * Universal EIN of Brand, Read Only.
   */
  "universalEin"?: string;
  /**
   * Caller supplied brand reference ID. If supplied, the value must be unique across all submitted brands. Can be used to prevent duplicate brand registrations.
   */
  "referenceId"?: string;
  /**
   * Optional brand attributes. Please refer to GET /enum/optionalAttributeNames for dictionary of optional attribute names.
   */
  "optionalAttributes"?: { [key: string]: any };
  /**
   * Test brand.
   */
  "mock": boolean;
  "identityStatus": SMSTenDLCBrandIdentityStatus;
  /**
   * Unix timestamp when brand was created.
   */
  "createDate"?: Date;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "accountId",
      baseName: "accountId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "entityType",
      baseName: "entityType",
      type: "SMSTenDLCBrandEntityType",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "cspId",
      baseName: "cspId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "brandId",
      baseName: "brandId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "firstName",
      baseName: "firstName",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "lastName",
      baseName: "lastName",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "displayName",
      baseName: "displayName",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "companyName",
      baseName: "companyName",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "ein",
      baseName: "ein",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "einIssuingCountry",
      baseName: "einIssuingCountry",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "phone",
      baseName: "phone",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "street",
      baseName: "street",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "city",
      baseName: "city",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "state",
      baseName: "state",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "postalCode",
      baseName: "postalCode",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "country",
      baseName: "country",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "email",
      baseName: "email",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "stockSymbol",
      baseName: "stockSymbol",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "stockExchange",
      baseName: "stockExchange",
      type: "SMSTenDLCBrandStockExchange",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "ipAddress",
      baseName: "ipAddress",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "website",
      baseName: "website",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "brandRelationship",
      baseName: "brandRelationship",
      type: "SMSTenDLCBrandRelationship",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "vertical",
      baseName: "vertical",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "altBusinessId",
      baseName: "altBusinessId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "altBusinessIdType",
      baseName: "altBusinessIdType",
      type: "SMSTenDLCBrandAltBusinessIdType",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "universalEin",
      baseName: "universalEin",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "referenceId",
      baseName: "referenceId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "optionalAttributes",
      baseName: "optionalAttributes",
      type: "{ [key: string]: any; }",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "mock",
      baseName: "mock",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "identityStatus",
      baseName: "identityStatus",
      type: "SMSTenDLCBrandIdentityStatus",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "createDate",
      baseName: "createDate",
      type: "Date",
      format: "date-time",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return SMSTenDLCBrand.attributeTypeMap;
  }
  public constructor(args: ArgumentsType) {
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : SMSTenDLCBrand.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["accountId"] = assign<string>("accountId");
    this["entityType"] = assign<SMSTenDLCBrandEntityType>("entityType");
    this["cspId"] = assign<string>("cspId");
    this["brandId"] = assign<string>("brandId");
    this["firstName"] = assign<string>("firstName");
    this["lastName"] = assign<string>("lastName");
    this["displayName"] = assign<string>("displayName");
    this["companyName"] = assign<string>("companyName");
    this["ein"] = assign<string>("ein");
    this["einIssuingCountry"] = assign<string>("einIssuingCountry");
    this["phone"] = assign<string>("phone");
    this["street"] = assign<string>("street");
    this["city"] = assign<string>("city");
    this["state"] = assign<string>("state");
    this["postalCode"] = assign<string>("postalCode");
    this["country"] = assign<string>("country");
    this["email"] = assign<string>("email");
    this["stockSymbol"] = assign<string>("stockSymbol");
    this["stockExchange"] =
      assign<SMSTenDLCBrandStockExchange>("stockExchange");
    this["ipAddress"] = assign<string>("ipAddress");
    this["website"] = assign<string>("website");
    this["brandRelationship"] =
      assign<SMSTenDLCBrandRelationship>("brandRelationship");
    this["vertical"] = assign<string>("vertical");
    this["altBusinessId"] = assign<string>("altBusinessId");
    this["altBusinessIdType"] =
      assign<SMSTenDLCBrandAltBusinessIdType>("altBusinessIdType");
    this["universalEin"] = assign<string>("universalEin");
    this["referenceId"] = assign<string>("referenceId");
    this["optionalAttributes"] = assign<{ [key: string]: any }>(
      "optionalAttributes",
    );
    this["mock"] = assign<boolean>("mock");
    this["identityStatus"] =
      assign<SMSTenDLCBrandIdentityStatus>("identityStatus");
    this["createDate"] = assign<Date>("createDate");
  }
}
