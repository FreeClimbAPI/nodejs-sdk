/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from "../http/http";

/**
 * Details for which features this number may be used.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  /**
    * CodegenProperty{openApiType='boolean', baseName='voice', complexType='null', getter='getVoice', setter='setVoice', description='Indicates whether a number can be used for voice calls. Replaces voiceEnabled.', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='voice', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.voice;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Indicates whether a number can be used for voice calls. Replaces voiceEnabled.', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Indicates whether a number can be used for voice calls. Replaces voiceEnabled.",
  "nullable" : true,
  "type" : "boolean",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='voice', nameInPascalCase='Voice', nameInSnakeCase='VOICE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  voice: boolean;
  /**
    * CodegenProperty{openApiType='boolean', baseName='sms', complexType='null', getter='getSms', setter='setSms', description='Indicates whether a number can be used SMS messaging. Replaces smsEnabled.', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='sms', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.sms;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Indicates whether a number can be used SMS messaging. Replaces smsEnabled.', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Indicates whether a number can be used SMS messaging. Replaces smsEnabled.",
  "nullable" : true,
  "type" : "boolean",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='sms', nameInPascalCase='Sms', nameInSnakeCase='SMS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  sms: boolean;
  /**
    * CodegenProperty{openApiType='boolean', baseName='tollFree', complexType='null', getter='getTollFree', setter='setTollFree', description='Indicates that a number is toll-free and will make toll-free calls, and when enabled, toll-free messages.', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='tollFree', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.tollFree;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Indicates that a number is toll-free and will make toll-free calls, and when enabled, toll-free messages.', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Indicates that a number is toll-free and will make toll-free calls, and when enabled, toll-free messages.",
  "nullable" : true,
  "type" : "boolean",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='tollFree', nameInPascalCase='TollFree', nameInSnakeCase='TOLL_FREE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  tollFree: boolean;
  /**
    * CodegenProperty{openApiType='boolean', baseName='tenDLC', complexType='null', getter='getTenDLC', setter='setTenDLC', description='Indicates that a number, if sms is true, will be used for 10DLC messaging', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='tenDLC', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.tenDLC;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Indicates that a number, if sms is true, will be used for 10DLC messaging', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Indicates that a number, if sms is true, will be used for 10DLC messaging",
  "nullable" : true,
  "type" : "boolean",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='tenDLC', nameInPascalCase='TenDLC', nameInSnakeCase='TEN_D_L_C', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  tenDLC: boolean;
  /**
    * CodegenProperty{openApiType='boolean', baseName='shortCode', complexType='null', getter='getShortCode', setter='setShortCode', description='Indicates that a number is a short code and can be used for short code messaging', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='shortCode', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.shortCode;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Indicates that a number is a short code and can be used for short code messaging', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "Indicates that a number is a short code and can be used for short code messaging",
  "nullable" : true,
  "type" : "boolean",
  "x-is-required" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=null, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-required=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='shortCode', nameInPascalCase='ShortCode', nameInSnakeCase='SHORT_CODE', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  shortCode: boolean;
}
export class Capabilities {
  /**
   * Indicates whether a number can be used for voice calls. Replaces voiceEnabled.
   */
  "voice": boolean;
  /**
   * Indicates whether a number can be used SMS messaging. Replaces smsEnabled.
   */
  "sms": boolean;
  /**
   * Indicates that a number is toll-free and will make toll-free calls, and when enabled, toll-free messages.
   */
  "tollFree": boolean;
  /**
   * Indicates that a number, if sms is true, will be used for 10DLC messaging
   */
  "tenDLC": boolean;
  /**
   * Indicates that a number is a short code and can be used for short code messaging
   */
  "shortCode": boolean;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "voice",
      baseName: "voice",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "sms",
      baseName: "sms",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "tollFree",
      baseName: "tollFree",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "tenDLC",
      baseName: "tenDLC",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "shortCode",
      baseName: "shortCode",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return Capabilities.attributeTypeMap;
  }
  public constructor(args: ArgumentsType) {
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : Capabilities.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["voice"] = assign<boolean>("voice");
    this["sms"] = assign<boolean>("sms");
    this["tollFree"] = assign<boolean>("tollFree");
    this["tenDLC"] = assign<boolean>("tenDLC");
    this["shortCode"] = assign<boolean>("shortCode");
  }
}
