/**
 * FreeClimb API
 * FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@freeclimb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PerclCommand } from "./../models/PerclCommand";
import { PlayBeep } from "./../models/PlayBeep";
import { HttpFile } from "../http/http";

/**
 * The `CreateConference` command does exactly what its name implies â€” it creates an unpopulated Conference (one without any Participants). Once created, a Conference remains in FreeClimb until explicitly terminated by a customer. Once a Conference has been terminated, it can no longer be used.
 */

interface AttributeType {
  name: string;
  baseName: string;
  type: string;
  format: string;
  defaultValue: any;
}
interface ArgumentsType {
  /**
    * CodegenProperty{openApiType='string', baseName='actionUrl', complexType='null', getter='getActionUrl', setter='setActionUrl', description=' This URL is invoked once the Conference is successfully created. Actions on the Conference, such as adding Participants, can be performed via the PerCL script returned in the response. ', dataType='string', datatypeWithEnum='string', dataFormat='uri', name='actionUrl', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.actionUrl;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription=' This URL is invoked once the Conference is successfully created. Actions on the Conference, such as adding Participants, can be performed via the PerCL script returned in the response. ', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : " This URL is invoked once the Conference is successfully created. Actions on the Conference, such as adding Participants, can be performed via the PerCL script returned in the response. ",
  "format" : "uri",
  "type" : "string",
  "x-is-required" : true,
  "x-is-uri" : true,
  "x-is-url" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=true, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=true, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-url=true, x-is-required=true, x-is-uri=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='actionUrl', nameInPascalCase='ActionUrl', nameInSnakeCase='ACTION_URL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=uri, dependentRequired=null, contains=null}
     */
  actionUrl: string;
  /**
    * CodegenProperty{openApiType='string', baseName='alias', complexType='null', getter='getAlias', setter='setAlias', description='Descriptive name for the Conference. ', dataType='string', datatypeWithEnum='string', dataFormat='null', name='alias', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.alias;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='Descriptive name for the Conference. ', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "Descriptive name for the Conference. ",
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='alias', nameInPascalCase='Alias', nameInSnakeCase='ALIAS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  alias?: string;
  /**
    * CodegenProperty{openApiType='PlayBeep', baseName='playBeep', complexType='PlayBeep', getter='getPlayBeep', setter='setPlayBeep', description='null', dataType='PlayBeep', datatypeWithEnum='PlayBeep', dataFormat='null', name='playBeep', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.playBeep;', baseType='PlayBeep', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='"always"', jsonSchema='{
  "$ref" : "#/components/schemas/PlayBeep"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=true, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=true, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues={enumVars=[{name=ALWAYS, isString=false, value='always'}, {name=NEVER, isString=false, value='never'}, {name=ENTRY_ONLY, isString=false, value='entryOnly'}, {name=EXIT_ONLY, isString=false, value='exitOnly'}], values=[always, never, entryOnly, exitOnly]}, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-enum=true, x-enum-mapping=[{enum=always, varname=ALWAYS}, {enum=never, varname=NEVER}, {enum=entryOnly, varname=ENTRY_ONLY}, {enum=exitOnly, varname=EXIT_ONLY}], x-enum-varnames=[ALWAYS, NEVER, ENTRY_ONLY, EXIT_ONLY], x-enum-default-attr=ALWAYS}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='playBeep', nameInPascalCase='PlayBeep', nameInSnakeCase='PLAY_BEEP', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=#/components/schemas/PlayBeep, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  playBeep?: PlayBeep;
  /**
    * CodegenProperty{openApiType='boolean', baseName='record', complexType='null', getter='getRecord', setter='setRecord', description='When set to `true`, the entire Conference is recorded. The `statusCallbackUrl` of the Conference will receive a `conferenceRecordingEnded` Webhook when the Conference transitions from the `inProgress` to empty state.', dataType='boolean', datatypeWithEnum='boolean', dataFormat='null', name='record', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.record;', baseType='boolean', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='When set to `true`, the entire Conference is recorded. The `statusCallbackUrl` of the Conference will receive a `conferenceRecordingEnded` Webhook when the Conference transitions from the `inProgress` to empty state.', maxLength=null, minLength=null, pattern='null', example='true', jsonSchema='{
  "description" : "When set to `true`, the entire Conference is recorded. The `statusCallbackUrl` of the Conference will receive a `conferenceRecordingEnded` Webhook when the Conference transitions from the `inProgress` to empty state.",
  "type" : "boolean"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=false, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=true, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='record', nameInPascalCase='Record', nameInSnakeCase='RECORD', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  record?: boolean;
  /**
    * CodegenProperty{openApiType='string', baseName='statusCallbackUrl', complexType='null', getter='getStatusCallbackUrl', setter='setStatusCallbackUrl', description='This URL is invoked when the status of the Conference changes or when a recording of the Conference has become available.', dataType='string', datatypeWithEnum='string', dataFormat='uri', name='statusCallbackUrl', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.statusCallbackUrl;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='This URL is invoked when the status of the Conference changes or when a recording of the Conference has become available.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "This URL is invoked when the status of the Conference changes or when a recording of the Conference has become available.",
  "format" : "uri",
  "type" : "string",
  "x-is-uri" : true,
  "x-is-url" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=true, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-url=true, x-is-uri=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='statusCallbackUrl', nameInPascalCase='StatusCallbackUrl', nameInSnakeCase='STATUS_CALLBACK_URL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=uri, dependentRequired=null, contains=null}
     */
  statusCallbackUrl?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='waitUrl', complexType='null', getter='getWaitUrl', setter='setWaitUrl', description='If specified, this URL provides the custom hold music for the Conference when it is in the populated state. This attribute is always fetched using HTTP GET and is fetched just once â€“ when the Conference is created. The URL must be an audio file that is reachable and readable by FreeClimb.', dataType='string', datatypeWithEnum='string', dataFormat='uri', name='waitUrl', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.waitUrl;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='If specified, this URL provides the custom hold music for the Conference when it is in the populated state. This attribute is always fetched using HTTP GET and is fetched just once â€“ when the Conference is created. The URL must be an audio file that is reachable and readable by FreeClimb.', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "If specified, this URL provides the custom hold music for the Conference when it is in the populated state. This attribute is always fetched using HTTP GET and is fetched just once â€“ when the Conference is created. The URL must be an audio file that is reachable and readable by FreeClimb.",
  "format" : "uri",
  "type" : "string",
  "x-is-uri" : true,
  "x-is-url" : true
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=true, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={x-is-url=true, x-is-uri=true}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='waitUrl', nameInPascalCase='WaitUrl', nameInSnakeCase='WAIT_URL', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=uri, dependentRequired=null, contains=null}
     */
  waitUrl?: string;
  /**
    * CodegenProperty{openApiType='string', baseName='parentCallId', complexType='null', getter='getParentCallId', setter='setParentCallId', description='ID of the Call that created this leg (child call).', dataType='string', datatypeWithEnum='string', dataFormat='null', name='parentCallId', min='null', max='null', defaultValue='undefined', defaultValueWithParam=' = data.parentCallId;', baseType='string', containerType='null', containerTypeMapped='null', title='null', unescapedDescription='ID of the Call that created this leg (child call).', maxLength=null, minLength=null, pattern='null', example='"string_example"', jsonSchema='{
  "description" : "ID of the Call that created this leg (child call).",
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isShort=false, isLong=false, isUnboundedInteger=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isPassword=false, isFreeFormObject=false, isArray=false, isMap=false, isOptional=false, isEnum=false, isInnerEnum=false, isEnumRef=false, isAnyType=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, isNew=false, isOverridden=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='parentCallId', nameInPascalCase='ParentCallId', nameInSnakeCase='PARENT_CALL_ID', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, uniqueItemsBoolean=null, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false, isNull=false, isVoid=false, getAdditionalPropertiesIsAnyType=false, getHasVars=false, getHasRequired=false, getHasDiscriminatorWithNonEmptyMapping=false, composedSchemas=null, hasMultipleTypes=false, hasSanitizedName=false, requiredVarsMap=null, ref=null, schemaIsFromAdditionalProperties=false, isBooleanSchemaTrue=false, isBooleanSchemaFalse=false, format=null, dependentRequired=null, contains=null}
     */
  parentCallId?: string;
}
export class CreateConference extends PerclCommand {
  /**
   *  This URL is invoked once the Conference is successfully created. Actions on the Conference, such as adding Participants, can be performed via the PerCL script returned in the response.
   */
  "actionUrl": string;
  /**
   * Descriptive name for the Conference.
   */
  "alias"?: string;
  "playBeep"?: PlayBeep;
  /**
   * When set to `true`, the entire Conference is recorded. The `statusCallbackUrl` of the Conference will receive a `conferenceRecordingEnded` Webhook when the Conference transitions from the `inProgress` to empty state.
   */
  "record"?: boolean;
  /**
   * This URL is invoked when the status of the Conference changes or when a recording of the Conference has become available.
   */
  "statusCallbackUrl"?: string;
  /**
   * If specified, this URL provides the custom hold music for the Conference when it is in the populated state. This attribute is always fetched using HTTP GET and is fetched just once â€“ when the Conference is created. The URL must be an audio file that is reachable and readable by FreeClimb.
   */
  "waitUrl"?: string;
  /**
   * ID of the Call that created this leg (child call).
   */
  "parentCallId"?: string;

  static readonly discriminator: string | undefined = "command";

  static readonly attributeTypeMap: AttributeType[] = [
    {
      name: "actionUrl",
      baseName: "actionUrl",
      type: "string",
      format: "uri",

      defaultValue: undefined,
    },
    {
      name: "alias",
      baseName: "alias",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "playBeep",
      baseName: "playBeep",
      type: "PlayBeep",
      format: "",

      defaultValue: PlayBeep.ALWAYS,
    },
    {
      name: "record",
      baseName: "record",
      type: "boolean",
      format: "",

      defaultValue: undefined,
    },
    {
      name: "statusCallbackUrl",
      baseName: "statusCallbackUrl",
      type: "string",
      format: "uri",

      defaultValue: undefined,
    },
    {
      name: "waitUrl",
      baseName: "waitUrl",
      type: "string",
      format: "uri",

      defaultValue: undefined,
    },
    {
      name: "parentCallId",
      baseName: "parentCallId",
      type: "string",
      format: "",

      defaultValue: undefined,
    },
  ];

  static getAttributeTypeMap(): AttributeType[] {
    return super
      .getAttributeTypeMap()
      .concat(CreateConference.attributeTypeMap);
  }
  public constructor(args: ArgumentsType) {
    super({ command: "CreateConference" });
    const assign = <T>(attribute: keyof ArgumentsType): T => {
      return (
        args.hasOwnProperty(attribute)
          ? args[attribute]
          : CreateConference.attributeTypeMap.find(
              (attr) => attr.name === attribute,
            )?.defaultValue
      ) as T;
    };
    this["actionUrl"] = assign<string>("actionUrl");
    this["alias"] = assign<string>("alias");
    this["playBeep"] = assign<PlayBeep>("playBeep");
    this["record"] = assign<boolean>("record");
    this["statusCallbackUrl"] = assign<string>("statusCallbackUrl");
    this["waitUrl"] = assign<string>("waitUrl");
    this["parentCallId"] = assign<string>("parentCallId");
  }
}
